service: aws-academy

frameworkVersion: '3'

# package:
#   # individually: true
#   patterns:
#     - '!node_modules/**'

custom:
  stage: ${opt:stage, 'dev'}
  aws_accountId:
    - prod: 661329848707
    - dev: 661329848707
  dynamodb:
    stages:
      - dev
      - prod
    start:
      port: 8000
      inMemory: true
      heapInitial: '200m'
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: ${self:custom.stage}
  enviroment:
    QUEUE_CARD_URL: https://sqs.${self:provider.region}.amazonaws.com/661329848707/${self:service}-${self:provider.stage}-create-card
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Put
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:us-east-1:661329848707:table/Client
            - arn:aws:dynamodb:us-east-1:661329848707:table/Card
            - arn:aws:dynamodb:us-east-1:661329848707:table/Gift
        - Effect: Allow
          Action:
            - sns:publish
          Resource:
            - arn:aws:sns:us-east-1:661329848707:aws-academy-dev-clientCreatedSNS
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource:
            - arn:aws:sqs:us-east-1:661329848707:aws-academy-dev-create-card
            - arn:aws:sqs:us-east-1:661329848707:aws-academy-dev-create-gift

functions:
  createClient:
    handler: src/functions/client/client.handler
    events:
      - httpApi:
          path: /client
          method: post
  createCard:
    handler: src/functions/card/card.handler
    events:
      - sqs:
          arn: !GetAtt createCardQueue.Arn
  createGift:
    handler: src/functions/gift/gift.handler
    events:
      - sqs:
          arn: !GetAtt createGiftQueue.Arn

resources:
  # DynamoDB
  Resources:
    Client:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Client
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Card:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Card
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Gift:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Gift
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # SNS
    clientCreatedSNS:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-clientCreatedSNS

    createCardQueueSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref clientCreatedSNS
        Endpoint: !GetAtt createCardQueue.Arn
        Protocol: sqs
        # RawMessageDelivery: true

    # Create the subscription to the 'createGiftQueue'
    createGiftQueueSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref clientCreatedSNS
        Endpoint: !GetAtt createGiftQueue.Arn
        Protocol: sqs
        # RawMessageDelivery: true
    # SQS
    createCardQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-create-card

    createGiftQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-create-gift